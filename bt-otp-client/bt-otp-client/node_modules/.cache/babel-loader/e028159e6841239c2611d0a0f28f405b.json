{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YourMuMisEZ\\\\Documents\\\\Visual Studio 2017\\\\Projects\\\\bt-otp-client\\\\src\\\\main\\\\Main.jsx\";\nimport * as React from 'react';\nimport OtpService from '../services/OtpService';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nexport default class MainComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInput = (value, item, index) => {\n      {\n        this.state.exchangeService.get(\"?currencyID=\" + item[\"id\"] + \"&value=\" + value).then(data => {\n          console.log(index);\n          let clone = this.state.convertedValues.slice();\n          clone[index] = data;\n          this.setState({\n            convertedValues: clone\n          });\n        });\n      }\n    };\n\n    this.generateCode = () => {\n      this.state.otpService.get(\"?currencyID=\" + item[\"id\"] + \"&value=\" + value).then(data => {\n        console.log(index);\n        let clone = this.state.convertedValues.slice();\n        clone[index] = data;\n        this.setState({\n          convertedValues: clone\n        });\n      });\n    };\n\n    this.state = {\n      otpService: new OtpService()\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(1);\n  }\n\n  loadData(pageNumber) {\n    this.state.currencyService.get(\"?page=\" + pageNumber).then(data => {\n      this.setState({\n        currencies: data,\n        convertedValues: []\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"UserId:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onclick: \"generateCode()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Generate new Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n      onComplete: () => {\n        // do your stuff here\n        return [true, 1500]; // repeat animation in 1.5 seconds\n      },\n      isPlaying: true,\n      duration: 30,\n      colors: [['#A30000']],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/YourMuMisEZ/Documents/Visual Studio 2017/Projects/bt-otp-client/src/main/Main.jsx"],"names":["React","OtpService","CountdownCircleTimer","MainComponent","Component","constructor","props","onInput","value","item","index","state","exchangeService","get","then","data","console","log","clone","convertedValues","slice","setState","generateCode","otpService","componentDidMount","loadData","pageNumber","currencyService","currencies","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,OArBmB,GAqBT,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,KAAwB;AAC9B;AACI,aAAKC,KAAL,CAAWC,eAAX,CAA2BC,GAA3B,CAA+B,iBAAiBJ,IAAI,CAAC,IAAD,CAArB,GAA8B,SAA9B,GAA0CD,KAAzE,EAAgFM,IAAhF,CAAsFC,IAAD,IAAU;AAC3FC,UAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,cAAIQ,KAAK,GAAG,KAAKP,KAAL,CAAWQ,eAAX,CAA2BC,KAA3B,EAAZ;AACAF,UAAAA,KAAK,CAACR,KAAD,CAAL,GAAeK,IAAf;AACA,eAAKM,QAAL,CACI;AACIF,YAAAA,eAAe,EAAED;AADrB,WADJ;AAIH,SARD;AASH;AACJ,KAjCkB;;AAAA,SAmCnBI,YAnCmB,GAmCJ,MAAM;AACjB,WAAKX,KAAL,CAAWY,UAAX,CAAsBV,GAAtB,CAA0B,iBAAiBJ,IAAI,CAAC,IAAD,CAArB,GAA8B,SAA9B,GAA0CD,KAApE,EAA2EM,IAA3E,CAAiFC,IAAD,IAAU;AACtFC,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,YAAIQ,KAAK,GAAG,KAAKP,KAAL,CAAWQ,eAAX,CAA2BC,KAA3B,EAAZ;AACAF,QAAAA,KAAK,CAACR,KAAD,CAAL,GAAeK,IAAf;AACA,aAAKM,QAAL,CACI;AACIF,UAAAA,eAAe,EAAED;AADrB,SADJ;AAIH,OARD;AASH,KA7CkB;;AAEf,SAAKP,KAAL,GAAa;AACTY,MAAAA,UAAU,EAAE,IAAItB,UAAJ;AADH,KAAb;AAGH;;AAEDuB,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc,CAAd;AACH;;AAEDA,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACjB,SAAKf,KAAL,CAAWgB,eAAX,CAA2Bd,GAA3B,CAA+B,WAAWa,UAA1C,EAAsDZ,IAAtD,CAA4DC,IAAD,IAAU;AACjE,WAAKM,QAAL,CACI;AACIO,QAAAA,UAAU,EAAEb,IADhB;AAEII,QAAAA,eAAe,EAAE;AAFrB,OADJ;AAKH,KAND;AAOH;;AA4BDU,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,eAKI;AAAQ,MAAA,OAAO,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,oBAAD;AACI,MAAA,UAAU,EAAE,MAAM;AACd;AACA,eAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAFc,CAEM;AACvB,OAJL;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,QAAQ,EAAE,EANd;AAOI,MAAA,MAAM,EAAE,CAAC,CAAC,SAAD,CAAD,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ;AAwBH;;AA3EsD","sourcesContent":["import * as React from 'react';\r\nimport OtpService from '../services/OtpService';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\nexport default class MainComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            otpService: new OtpService(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData(1);\r\n    }\r\n\r\n    loadData(pageNumber) {\r\n        this.state.currencyService.get(\"?page=\" + pageNumber).then((data) => {\r\n            this.setState(\r\n                {\r\n                    currencies: data,\r\n                    convertedValues: []\r\n                });\r\n        });\r\n    }\r\n\r\n    onInput = (value, item, index) => {\r\n        {\r\n            this.state.exchangeService.get(\"?currencyID=\" + item[\"id\"] + \"&value=\" + value).then((data) => {\r\n                console.log(index);\r\n                let clone = this.state.convertedValues.slice();\r\n                clone[index] = data;\r\n                this.setState(\r\n                    {\r\n                        convertedValues: clone\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    generateCode = () => {\r\n        this.state.otpService.get(\"?currencyID=\" + item[\"id\"] + \"&value=\" + value).then((data) => {\r\n            console.log(index);\r\n            let clone = this.state.convertedValues.slice();\r\n            clone[index] = data;\r\n            this.setState(\r\n                {\r\n                    convertedValues: clone\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <label>\r\n                    UserId:\r\n                <input type=\"text\" name=\"name\" />\r\n                </label>\r\n                <button onclick=\"generateCode()\">\r\n                    Generate new Code\r\n                </button>\r\n                <div>\r\n                    <CountdownCircleTimer\r\n                        onComplete={() => {\r\n                            // do your stuff here\r\n                            return [true, 1500] // repeat animation in 1.5 seconds\r\n                        }}\r\n                        isPlaying\r\n                        duration={30}\r\n                        colors={[['#A30000']]}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}