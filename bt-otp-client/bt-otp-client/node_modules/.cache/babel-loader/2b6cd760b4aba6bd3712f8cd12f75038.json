{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YourMuMisEZ\\\\Documents\\\\Visual Studio 2017\\\\Projects\\\\bt-otp-client\\\\src\\\\main\\\\Main.jsx\";\nimport * as React from 'react';\nimport CurrencyService from '../services/CurrencyService';\nimport ExchangeService from '../services/ExchangeService';\nexport default class MainComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInput = (value, item, index) => {\n      {\n        this.state.exchangeService.get(\"?currencyID=\" + item[\"id\"] + \"&value=\" + value).then(data => {\n          console.log(index);\n          let clone = this.state.convertedValues.slice();\n          clone[index] = data;\n          this.setState({\n            convertedValues: clone\n          });\n        });\n      }\n    };\n\n    this.state = {\n      currencyService: new CurrencyService(),\n      exchangeService: new ExchangeService(),\n      currencies: [],\n      convertedValues: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadData(1);\n  }\n\n  loadData(pageNumber) {\n    this.state.currencyService.get(\"?page=\" + pageNumber).then(data => {\n      this.setState({\n        currencies: data,\n        convertedValues: []\n      });\n    });\n  }\n\n  render() {\n    this.rows = this.state.currencies.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, item[\"name\"]), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, item[\"exchangeValue\"]), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Value to Convert\",\n      onChange: e => this.onInput(e.target.value, item, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.state.convertedValues[index])));\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      key: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Currency\"), /*#__PURE__*/React.createElement(\"th\", {\n      key: \"exchangeValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Exchange Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      key: \"convert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Value to convert (Euro)\"), /*#__PURE__*/React.createElement(\"th\", {\n      key: \"convert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Converted Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.rows));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/YourMuMisEZ/Documents/Visual Studio 2017/Projects/bt-otp-client/src/main/Main.jsx"],"names":["React","CurrencyService","ExchangeService","MainComponent","Component","constructor","props","onInput","value","item","index","state","exchangeService","get","then","data","console","log","clone","convertedValues","slice","setState","currencyService","currencies","componentDidMount","loadData","pageNumber","render","rows","map","e","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport CurrencyService from '../services/CurrencyService';\r\nimport ExchangeService from '../services/ExchangeService';\r\n\r\nexport default class MainComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currencyService: new CurrencyService(),\r\n            exchangeService: new ExchangeService(),\r\n            currencies: [],\r\n            convertedValues:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData(1);\r\n    }\r\n\r\n    loadData(pageNumber) {\r\n        this.state.currencyService.get(\"?page=\" + pageNumber).then((data) => {\r\n            this.setState(\r\n                {\r\n                    currencies: data,\r\n                    convertedValues: []\r\n                });\r\n        });\r\n    }\r\n\r\n    onInput = (value, item,index) => {\r\n        {\r\n            this.state.exchangeService.get(\"?currencyID=\" + item[\"id\"]+\"&value=\"+value).then((data) => {\r\n                console.log(index);\r\n                let clone = this.state.convertedValues.slice();\r\n                clone[index]=data;\r\n                this.setState(\r\n                    {\r\n                        convertedValues: clone\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.rows = this.state.currencies.map((item,index) =>\r\n            <tr>\r\n                <td align=\"center\">{item[\"name\"]}</td>\r\n                <td align=\"center\">{item[\"exchangeValue\"]}</td>\r\n                <td align=\"center\"> <input type=\"text\" placeholder=\"Value to Convert\" onChange={e => this.onInput(e.target.value, item,index)} /> </td>\r\n                <td align=\"center\">{this.state.convertedValues[index]}</td>\r\n            </tr>\r\n\r\n        );\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th key=\"currency\">Currency</th>\r\n                        <th key=\"exchangeValue\">Exchange Value</th>\r\n                        <th key=\"convert\">Value to convert (Euro)</th>\r\n                        <th key=\"convert\">Converted Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.rows}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}