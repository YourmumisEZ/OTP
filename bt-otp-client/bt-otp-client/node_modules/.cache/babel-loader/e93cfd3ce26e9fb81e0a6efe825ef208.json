{"ast":null,"code":"var _jsxFileName = \"C:\\\\Solutions\\\\BT-OTP\\\\bt-otp-client\\\\bt-otp-client\\\\src\\\\main\\\\Main.jsx\";\nimport * as React from 'react';\nimport OtpService from '../services/OtpService';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nexport default class MainComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCode = () => {\n      this.state.otpService.get(this.state.userID).then(data => {\n        console.log(data);\n        this.setState({\n          showTimer: true,\n          generatedCode: data\n        });\n      });\n    };\n\n    this.dataChanged = event => {\n      this.setState({\n        userID: event.target.value\n      });\n    };\n\n    this.renderComponent = () => {\n      let timer;\n\n      if (this.state.showTimer == true) {\n        timer = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n          onComplete: () => {// this.setState({\n            //     showTimer: false,\n            //     data: null,\n            //     userID: null\n            // });\n          },\n          isPlaying: true,\n          duration: 30,\n          colors: [['#A30000']],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, \"Current Valid Code: \", this.state.generatedCode));\n      } else {\n        timer = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.dataChanged,\n        name: \"userID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.generateCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"GenerateCode\")), timer);\n    };\n\n    this.state = {\n      otpService: new OtpService(),\n      userID: null,\n      showTimer: false,\n      generatedCode: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, this.renderComponent());\n  }\n\n}","map":{"version":3,"sources":["C:/Solutions/BT-OTP/bt-otp-client/bt-otp-client/src/main/Main.jsx"],"names":["React","OtpService","CountdownCircleTimer","MainComponent","Component","constructor","props","generateCode","state","otpService","get","userID","then","data","console","log","setState","showTimer","generatedCode","dataChanged","event","target","value","renderComponent","timer","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,YAVmB,GAUJ,MAAM;AACjB,WAAKC,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0B,KAAKF,KAAL,CAAWG,MAArC,EAA6CC,IAA7C,CAAmDC,IAAD,IAAU;AACxDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CACI;AACIC,UAAAA,SAAS,EAAE,IADf;AAEIC,UAAAA,aAAa,EAAEL;AAFnB,SADJ;AAKH,OAPD;AAQH,KAnBkB;;AAAA,SAqBnBM,WArBmB,GAqBJC,KAAD,IAAW;AACrB,WAAKJ,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAES,KAAK,CAACC,MAAN,CAAaC;AADX,OAAd;AAGH,KAzBkB;;AAAA,SA2BnBC,eA3BmB,GA2BD,MAAM;AACpB,UAAIC,KAAJ;;AACA,UAAI,KAAKhB,KAAL,CAAWS,SAAX,IAAwB,IAA5B,EAAkC;AAC9BO,QAAAA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACJ,oBAAC,oBAAD;AACI,UAAA,UAAU,EAAE,MAAM,CACd;AACA;AACA;AACA;AACA;AACH,WAPL;AAQI,UAAA,SAAS,MARb;AASI,UAAA,QAAQ,EAAE,EATd;AAUI,UAAA,MAAM,EAAE,CAAC,CAAC,SAAD,CAAD,CAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAYyB,KAAKhB,KAAL,CAAWU,aAZpC,CADI,CAAR;AAiBH,OAlBD,MAmBK;AACDM,QAAAA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;;AAED,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKL,WAAlC;AAA+C,QAAA,IAAI,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKZ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ,EAKKiB,KALL,CADJ;AASH,KA7DkB;;AAEf,SAAKhB,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,IAAIR,UAAJ,EADH;AAETU,MAAAA,MAAM,EAAE,IAFC;AAGTM,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,aAAa,EAAE;AAJN,KAAb;AAMH;;AAuDDO,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,eAAL,EADL,CADJ;AAKH;;AAxEsD","sourcesContent":["import * as React from 'react';\r\nimport OtpService from '../services/OtpService';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\n\r\nexport default class MainComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            otpService: new OtpService(),\r\n            userID: null,\r\n            showTimer: false,\r\n            generatedCode: '',\r\n        };\r\n    }\r\n\r\n    generateCode = () => {\r\n        this.state.otpService.get(this.state.userID).then((data) => {\r\n            console.log(data);\r\n            this.setState(\r\n                {\r\n                    showTimer: true,\r\n                    generatedCode: data,\r\n                });\r\n        });\r\n    }\r\n\r\n    dataChanged = (event) => {\r\n        this.setState({\r\n            userID: event.target.value\r\n        });\r\n    }\r\n\r\n    renderComponent = () => {\r\n        let timer;\r\n        if (this.state.showTimer == true) {\r\n            timer = <div>\r\n                <CountdownCircleTimer\r\n                    onComplete={() => {\r\n                        // this.setState({\r\n                        //     showTimer: false,\r\n                        //     data: null,\r\n                        //     userID: null\r\n                        // });\r\n                    }}\r\n                    isPlaying\r\n                    duration={30}\r\n                    colors={[['#A30000']]}\r\n                >\r\n                    Current Valid Code: {this.state.generatedCode}\r\n\r\n                </CountdownCircleTimer>\r\n            </div>;\r\n        }\r\n        else {\r\n            timer = <div></div>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <input type=\"text\" onChange={this.dataChanged} name=\"userID\" />\r\n                    <button onClick={this.generateCode}>GenerateCode</button>\r\n                </div>\r\n                {timer}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {this.renderComponent()}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}